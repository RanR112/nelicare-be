
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  nama: 'nama',
  email: 'email',
  password: 'password',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EdukasiScalarFieldEnum = {
  id: 'id',
  idAdmin: 'idAdmin',
  judul: 'judul',
  isi: 'isi',
  layananId: 'layananId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.JadwalImunisasiScalarFieldEnum = {
  id: 'id',
  idLayanan: 'idLayanan',
  tanggal: 'tanggal',
  catatan: 'catatan',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.KunjunganScalarFieldEnum = {
  id: 'id',
  idPasien: 'idPasien',
  idLayanan: 'idLayanan',
  tglKunjungan: 'tglKunjungan',
  waktuKunjungan: 'waktuKunjungan',
  status: 'status',
  catatan: 'catatan',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LayananScalarFieldEnum = {
  id: 'id',
  nama: 'nama',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LayananEdukasiScalarFieldEnum = {
  idEdukasi: 'idEdukasi',
  idLayanan: 'idLayanan',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ObatScalarFieldEnum = {
  id: 'id',
  nama: 'nama',
  stok: 'stok',
  harga: 'harga',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PasienScalarFieldEnum = {
  id: 'id',
  nama: 'nama',
  noReg: 'noReg',
  tglLahir: 'tglLahir',
  alamat: 'alamat',
  hp: 'hp',
  jenisKelamin: 'jenisKelamin',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PembayaranScalarFieldEnum = {
  id: 'id',
  idRm: 'idRm',
  tglBayar: 'tglBayar',
  totalBayar: 'totalBayar',
  metode: 'metode',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RekamMedisScalarFieldEnum = {
  id: 'id',
  idKunjungan: 'idKunjungan',
  keluhan: 'keluhan',
  diagnosa: 'diagnosa',
  tindakan: 'tindakan',
  catatan: 'catatan',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ResepScalarFieldEnum = {
  id: 'id',
  idRm: 'idRm',
  idObat: 'idObat',
  jumlah: 'jumlah',
  aturanPakai: 'aturanPakai',
  catatan: 'catatan',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StokObatScalarFieldEnum = {
  id: 'id',
  idObat: 'idObat',
  tanggal: 'tanggal',
  jumlah: 'jumlah',
  transaksi: 'transaksi',
  sumberTransaksi: 'sumberTransaksi',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  admin: 'admin',
  superadmin: 'superadmin'
};

exports.StatusKunjungan = exports.$Enums.StatusKunjungan = {
  selesai: 'selesai',
  pending: 'pending',
  batal: 'batal'
};

exports.JenisKelamin = exports.$Enums.JenisKelamin = {
  P: 'P',
  L: 'L'
};

exports.StatusPasien = exports.$Enums.StatusPasien = {
  aktif: 'aktif',
  nonaktif: 'nonaktif'
};

exports.StatusPembayaran = exports.$Enums.StatusPembayaran = {
  lunas: 'lunas',
  pending: 'pending',
  batal: 'batal'
};

exports.StatusRekam = exports.$Enums.StatusRekam = {
  selesai: 'selesai',
  kontrol: 'kontrol',
  rujuk: 'rujuk'
};

exports.TransaksiObat = exports.$Enums.TransaksiObat = {
  masuk: 'masuk',
  keluar: 'keluar'
};

exports.SumberTransaksi = exports.$Enums.SumberTransaksi = {
  resep: 'resep',
  supplier: 'supplier',
  expired: 'expired'
};

exports.Prisma.ModelName = {
  Admin: 'Admin',
  Edukasi: 'Edukasi',
  JadwalImunisasi: 'JadwalImunisasi',
  Kunjungan: 'Kunjungan',
  Layanan: 'Layanan',
  LayananEdukasi: 'LayananEdukasi',
  Obat: 'Obat',
  Pasien: 'Pasien',
  Pembayaran: 'Pembayaran',
  RekamMedis: 'RekamMedis',
  Resep: 'Resep',
  StokObat: 'StokObat'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
